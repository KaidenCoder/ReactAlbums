{"version":3,"sources":["components/GetAlbums.js","components/Navbar.js","components/PostAlbums.js","components/PutAlbums.js","components/DeleteAlbums.js","App.js","reportWebVitals.js","index.js"],"names":["GetAlbums","useState","value","setValue","useEffect","fetch","then","response","json","data","className","style","textDecoration","map","i","d","width","id","title","Navbar","to","PostAlbums","postvalue","setPostValue","method","body","JSON","stringify","userId","headers","margin","padding","PutAlbums","putvalue","setPutValue","DeleteAlbums","deletevalue","setDeleteValue","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64d8b2a1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst GetAlbums = () => {\n    const [value, setValue] = useState([])\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/albums\")\n            .then(response => response.json())\n            .then(data => setValue(data))\n    }, [])\n\n    // DISPLAY ALL THE ALBUMS USING GET METHOD\n    return (\n        <div className=\"col-sm row cards\">\n            <h5 className=\"pb-2\" style={{ textDecoration: \"underline\" }}>GET METHOD</h5>\n            {value.map((i, d) => (\n                <div className=\"card m-3\" key={d} style={{ width: \"18rem\" }}>\n                    <p>ID: {i.id}</p>\n                    <p>TITLE: {i.title}</p>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default GetAlbums\n","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nconst Navbar = () => {\n    return (\n        <header>\n            <ul className=\"navlink\">\n                <li><Link to=\"/ReactAlbums\">Get</Link></li>\n                <li><Link to=\"/ReactAlbums/post\">Post</Link></li>\n                <li><Link to=\"/ReactAlbums/put\">Put</Link></li>\n                <li><Link to=\"/ReactAlbums/delete\">Delete</Link></li>\n            </ul>\n\n        </header>\n    )\n}\n\nexport default Navbar\n","import React, { useEffect, useState } from 'react';\n\nconst PostAlbums = () => {\n    const [postvalue, setPostValue] = useState({})\n\n    // CALLING POST METHOD ON NEW ALBUM ID\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/albums\",\n            {\n                method: \"POST\",\n                body: JSON.stringify({\n                    title: \"I posted this message through the FETCH POST method\",\n                    userId: 1\n                }),\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n            })\n            .then(response => response.json())\n            .then(data => setPostValue(data))\n    }, [])\n\n    // DISPLAY THE ALBUM USING THE POST METHOD\n    return (\n        <>\n            <h5 className=\"pb-2\" style={{ textDecoration: \"underline\" }}>POST METHOD</h5>\n            <div className=\"card\" style={{ margin: \"auto\", width: '18rem', padding: '2em' }}>\n                <p>ID: {postvalue.id}</p>\n                <p>TITLE: {postvalue.title}</p>\n            </div>\n        </>\n    )\n}\n\nexport default PostAlbums\n","import React, { useEffect, useState } from 'react';\n\nconst PutAlbums = () => {\n\n    const [putvalue, setPutValue] = useState({})\n\n    // CALLING PUT METHOD ON ALBUM ID: 2\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/albums/2\",\n            {\n                method: \"PUT\",\n                body: JSON.stringify({\n                    title: \"Learn Javascript because it is incredible as I wrote this through the FETCH PUT method\",\n                    userId: 1\n                }),\n                headers: {\n                    'Content-type': 'application/json; charset=UTF-8',\n                },\n            })\n            .then(response => response.json())\n            .then(data => setPutValue(data))\n    }, [])\n\n    // DISPLAY THE ALBUM USING THE PUT METHOD\n    return (\n        <>\n            <h5 className=\"pb-2\" style={{ textDecoration: \"underline\" }}>PUT METHOD</h5>\n            <div className=\"card\" style={{ margin: \"auto\", width: '18rem', padding: '2em' }}>\n                <p>ID: {putvalue.id}</p>\n                <p>TITLE: {putvalue.title}</p>\n            </div>\n\n        </>\n    )\n}\n\nexport default PutAlbums\n","import React, { useEffect, useState } from 'react';\n\nconst DeleteAlbums = () => {\n    const [value, setValue] = useState({})\n    const [deletevalue, setDeleteValue] = useState({})\n\n    // CALLING GET METHOD ON ALBUM ID: 2\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/albums/2\")\n            .then(response => response.json())\n            .then(data => setValue(data))\n    }, [])\n\n    // CALLING DELETE METHOD ON ALBUM ID: 2\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/albums/2\",\n            {\n                method: \"DELETE\"\n            })\n            .then(response => response.json())\n            .then(data => setDeleteValue(data))\n    }, [])\n\n    return (\n        <>\n            <h5 className=\"pb-2\" style={{ textDecoration: \"underline\" }}>DELETE METHOD</h5>\n            {/* DISPLAY THE ALBUM USING THE GET METHOD */}\n            <div className=\"card mb-2\" style={{ margin: \"auto\", width: '18rem', padding: '2em' }}>\n                <h6 className=\"pb-2\" style={{ textDecoration: \"underline\" }}>BEFORE DELETED ID-2</h6>\n                <p>ID: {value.id}</p>\n                <p>TITLE: {value.title}</p>\n            </div>\n            {/* DISPLAY THE ALBUM USING THE DELETE METHOD */}\n            <div className=\"card\" style={{ margin: \"auto\", width: '18rem', padding: '2em' }}>\n                <h6 style={{ textDecoration: \"underline\" }}>AFTER DELETED ID-2</h6>\n                <p>ID: {deletevalue.id}</p>\n                <p>TITLE: {deletevalue.title}</p>\n            </div>\n\n        </>\n    )\n}\n\nexport default DeleteAlbums\n","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router';\nimport GetAlbums from './components/GetAlbums';\nimport Navbar from './components/Navbar';\nimport PostAlbums from './components/PostAlbums';\nimport PutAlbums from './components/PutAlbums';\nimport DeleteAlbums from './components/DeleteAlbums';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      {/* Navbar link */}\n      <Navbar />\n      {/* GET, POST, PUT, DELETE Route Links */}\n      <Switch>\n        <Route exact path=\"/ReactAlbums\"> <GetAlbums /></Route>\n        <Route exact path=\"/ReactAlbums/post\"> <PostAlbums /></Route>\n        <Route exact path=\"/ReactAlbums/put\"> <PutAlbums /></Route>\n        <Route exact path=\"/ReactAlbums/delete\"> <DeleteAlbums /></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}